version: 2.1

orbs:
  gcp-gcr: circleci/gcp-gcr@0.15.1

jobs:
  build_test:
    docker:
      - image: cimg/python:3.11.1
    steps:
      - checkout
      - run: pip install poetry
      - run: poetry config virtualenvs.create false
      - run: poetry install --no-root
      - run: poetry run pytest

  build_push_image_on_gcr:
    docker:
      - image: cimg/python:3.11.1
    steps:
      - checkout
      - run:
          name: Init gcloud CLI and build Docker image
          command: |
            echo 'export PATH=~$PATH:~/.local/bin' >> $BASH_ENV
            echo ${GCLOUD_SERVICE_KEY} | base64 --decode --ignore-garbage > $HOME/gcloud-service-key.json
            echo 'export GOOGLE_CLOUD_KEYS=$(cat $HOME/gcloud-service-key.json)' >> $BASH_ENV
            docker build -t gcr.io/$GOOGLE_CLOUD_PROJECT/pds-gateway .
      - gcp-gcr/gcr-auth:
          gcloud-service-key: GOOGLE_CLOUD_KEYS
          google-project-id: GOOGLE_CLOUD_PROJECT
          google-compute-zone: GOOGLE_CLOUD_REGION
      - gcp-gcr/push-image:
          google-project-id: GOOGLE_CLOUD_PROJECT
          registry-url: "gcr.io"
          image: pds-gateway
  
  deploy:
    parameters:
      service-name:
        type: string
      allowed-ds-ids:
        type: string
      api-url:
        type: string
    docker:
      - image: cimg/python:3.11.1
    steps:
      - run:
          name: Init gcloud CLI
          command: |
            echo 'export PATH=~$PATH:~/.local/bin' >> $BASH_ENV
            echo ${GCLOUD_SERVICE_KEY} | base64 --decode --ignore-garbage > $HOME/gcloud-service-key.json
            echo 'export GOOGLE_CLOUD_KEYS=$(cat $HOME/gcloud-service-key.json)' >> $BASH_ENV
      - gcp-gcr/gcr-auth:
          gcloud-service-key: GOOGLE_CLOUD_KEYS
          google-project-id: GOOGLE_CLOUD_PROJECT
          google-compute-zone: GOOGLE_CLOUD_REGION
      - run:
          name: Deploy to Cloud Run
          command: |
            echo $GOOGLE_CLOUD_KEYS | gcloud auth activate-service-account --key-file=-
            gcloud run deploy << parameters.allowed-ds-ids >> \
                --image gcr.io/$GOOGLE_CLOUD_PROJECT/pds-gateway:latest \
                --port 8000 \
                --set-env-vars MODE=dev \
                --set-env-vars ALLOWED_DATA_SOURCE_IDS=<< parameters.allowed-ds-ids >> \
                --set-env-vars VERIFY_REQUEST_URL=https://laozi-testnet6.bandchain.org/api/oracle/v1/verify_request \
                --set-env-vars ADAPTER_TYPE=standard_crypto_price \
                --set-env-vars ADAPTER_NAME=internal_service \
                --set-env-vars API_URL=<< parameters.api-url >> \
                --set-env-vars MAX_DELAY_VERIFICATION=5 \
                --platform managed --region $GOOGLE_CLOUD_REGION --allow-unauthenticated
                

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build_test
      - build_push_image_on_gcr:
          requires:
            - build_test
      - deploy:
          name: deploy-cmc-pds-gateway
          requires:
            - build_push_image_on_gcr
          service-name: "cmc-gateway"
          allowed-ds-ids: "[236,274]"
          api-url: "http://10.148.0.2?source=cmc"
      - deploy:
          name: deploy-bnc-pds-gateway
          requires:
            - build_push_image_on_gcr
          service-name: "bnc-gateway"
          allowed-ds-ids: "[234,270]"
          api-url: "http://10.148.0.2?source=bnc"
      
