import os
from datetime import datetime
from typing import Dict

import httpx

from adapter.standard_crypto_price.base import StandardCryptoPrice, Input, Output


class CoinGecko(StandardCryptoPrice):
    api_url: str = "https://pro-api.coingecko.com/api/v3/simple/price"
    api_key: str
    symbols_map: Dict[str, str] = None
    symbols_map_back: Dict[str, str] = None

    def __init__(self):
        self.api_key = os.getenv("API_KEY", None)
        self.symbols_map = {
            "1INCH": "1inch",
            "AAVE": "aave",
            "ABYSS": "the-abyss",
            "ADA": "cardano",
            "AKRO": "akropolis",
            "ALCX": "alchemix",
            "ALGO": "algorand",
            "ALPHA": "alpha-finance",
            "AMPL": "ampleforth",
            "ANKR": "ankr",
            "ANT": "aragon",
            "APE": "apecoin",
            "ARB": "arbitrum",
            "ARPA": "arpa",
            "AST": "airswap",
            "ASTR": "astar",
            "ATOM": "cosmos",
            "AUDIO": "audius",
            "AUTO": "auto",
            "AVAX": "avalanche-2",
            "AXS": "axie-infinity",
            "BAL": "balancer",
            "BAND": "band-protocol",
            "BAT": "basic-attention-token",
            "BCH": "bitcoin-cash",
            "BEL": "bella-protocol",
            "BETA": "beta-finance",
            "BETH": "binance-eth",
            "BLZ": "bluzelle",
            "BNB": "binancecoin",
            "BNT": "bancor",
            "BOBA": "boba-network",
            "BORA": "bora",
            "BSV": "bitcoin-cash-sv",
            "BTC": "bitcoin",
            "BTCB": "bitcoin-bep2",
            "BTG": "bitcoin-gold",
            "BTM": "bytom",
            "BTS": "bitshares",
            "BTT": "bittorrent",
            "BUSD": "binance-usd",
            "BZRX": "bzx-protocol",
            "C98": "coin98",
            "CAKE": "pancakeswap-token",
            "CELO": "celo",
            "CKB": "nervos-network",
            "CLV": "clover-finance",
            "COMP": "compound-governance-token",
            "CREAM": "cream-2",
            "CRO": "crypto-com-chain",
            "CRV": "curve-dao-token",
            "CUSD": "celo-dollar",
            "CVC": "civic",
            "DAI": "dai",
            "DASH": "dash",
            "DCR": "decred",
            "DGB": "digibyte",
            "DIA": "dia-data",
            "DOGE": "dogecoin",
            "DOT": "polkadot",
            "DPI": "defipulse-index",
            "DYDX": "dydx",
            "EGLD": "elrond-erd-2",
            "ELF": "aelf",
            "ENJ": "enjincoin",
            "EOS": "eos",
            "ETC": "ethereum-classic",
            "ETH": "ethereum",
            "EURS": "stasis-eurs",
            "EWT": "energy-web-token",
            "FET": "fetch-ai",
            "FIL": "filecoin",
            "FOR": "force-protocol",
            "FRAX": "frax",
            "FTM": "fantom",
            "GALA": "gala",
            "GLMR": "moonbeam",
            "GMX": "gmx",
            "GNO": "gnosis",
            "GRT": "the-graph",
            "HBAR": "hedera-hashgraph",
            "HEGIC": "hegic",
            "HNT": "helium",
            "HT": "huobi-token",
            "ICX": "icon",
            "ILV": "illuvium",
            "IMX": "immutable-x",
            "INJ": "injective-protocol",
            "IOST": "iostoken",
            "IOTX": "iotex",
            "JOE": "joe",
            "JST": "just",
            "KAI": "kardiachain",
            "KAVA": "kava",
            "KDA": "kadena",
            "KEY": "selfkey",
            "KLAY": "klay-token",
            "KMD": "komodo",
            "KNC": "kyber-network-crystal",
            "KP3R": "keep3rv1",
            "KSM": "kusama",
            "LEO": "leo-token",
            "LINA": "linear",
            "LINK": "chainlink",
            "LOOM": "loom-network",
            "LRC": "loopring",
            "LSK": "lisk",
            "LTC": "litecoin",
            "MANA": "decentraland",
            "MATIC": "matic-network",
            "MIM": "magic-internet-money",
            "MIOTA": "iota",
            "MKR": "maker",
            "MLN": "melon",
            "MOVR": "moonriver",
            "MTL": "metal",
            "MVL": "mass-vehicle-ledger",
            "NEAR": "near",
            "NEO": "neo",
            "NFT": "apenft",
            "NMR": "numeraire",
            "OCEAN": "ocean-protocol",
            "OGN": "origin-protocol",
            "OKB": "okb",
            "OMG": "omisego",
            "ONE": "harmony",
            "ONT": "ontology",
            "OP": "optimism",
            "OSMO": "osmosis",
            "PAXG": "pax-gold",
            "PERP": "perpetual-protocol",
            "PLR": "pillar",
            "PNK": "kleros",
            "PNT": "pnetwork",
            "POLY": "polymath",
            "POWR": "power-ledger",
            "QKC": "quark-chain",
            "QNT": "quant-network",
            "QTUM": "qtum",
            "REN": "republic-protocol",
            "REP": "augur",
            "REQ": "request-network",
            "RLC": "iexec-rlc",
            "ROSE": "oasis-network",
            "RSR": "reserve-rights-token",
            "RSV": "reserve",
            "RUNE": "thorchain",
            "RVN": "ravencoin",
            "SAND": "the-sandbox",
            "SC": "siacoin",
            "SCRT": "secret",
            "SFI": "saffron-finance",
            "SHIB": "shiba-inu",
            "SKL": "skale",
            "SNT": "status",
            "SNX": "havven",
            "SOL": "solana",
            "SPELL": "spell-token",
            "SRM": "serum",
            "STMX": "storm",
            "STORJ": "storj",
            "STRK": "strike",
            "STX": "blockstack",
            "SUN": "sun-token",
            "SUSD": "nusd",
            "SUSHI": "sushi",
            "SXP": "swipe",
            "THETA": "theta-token",
            "TOMO": "tomochain",
            "TRB": "tellor",
            "TRX": "tron",
            "TUSD": "true-usd",
            "TWT": "trust-wallet-token",
            "UBT": "unibright",
            "UMA": "uma",
            "UNI": "uniswap",
            "UPP": "sentinel-protocol",
            "USDC": "usd-coin",
            "USDP": "paxos-standard",
            "USDT": "tether",
            "VET": "vechain",
            "VIDT": "v-id-blockchain",
            "WAN": "wanchain",
            "WAVES": "waves",
            "WBTC": "wrapped-bitcoin",
            "WEMIX": "wemix-token",
            "WNXM": "wrapped-nxm",
            "WRX": "wazirx",
            "XEM": "nem",
            "XLM": "stellar",
            "XMR": "monero",
            "XPR": "proton",
            "XRP": "ripple",
            "XTZ": "tezos",
            "XVS": "venus",
            "YAMV2": "yam-v2",
            "YFI": "yearn-finance",
            "YFII": "yfii-finance",
            "YGG": "yield-guild-games",
            "ZEC": "zcash",
            "ZIL": "zilliqa",
            "ZRX": "0x"
        }
        self.symbols_map_back = {v: k for k, v in self.symbols_map.items()}

    async def call(self, input_: Input) -> Output:
        client = httpx.AsyncClient()
        response = await client.request(
            "GET",
            self.api_url,
            params={
                "ids": ",".join([self.symbols_map.get(symbol, symbol) for symbol in input_["symbols"]]), 
                "vs_currencies": "USD",
                },
            headers={
                "x-cg-pro-api-key": self.api_key,
            },
        )
        response.raise_for_status()
        response_json = response.json()

        timestamp = int(datetime.now().timestamp())
        prices = [
            {
                "symbol": self.symbols_map_back.get(symbol, symbol),
                "price": float(value["usd"]),
                "timestamp": timestamp,
            }
            for symbol, value in response_json.items()
        ]

        return Output(prices=prices)
